// Definindo os pinos de controle dos motores
#define MOTOR1_IN1 3
#define MOTOR1_IN2 4
#define MOTOR2_IN1 5
#define MOTOR2_IN2 6
#define MOTOR1_ENA 9  // Habilitação do motor 1 (PWM)
#define MOTOR2_ENB 10 // Habilitação do motor 2 (PWM)

// Velocidade padrão
#define VELOCIDADE_MAX 255
#define VELOCIDADE_MIN 100

void setup() {
  // Configura os pinos como saída
  pinMode(MOTOR1_IN1, OUTPUT);
  pinMode(MOTOR1_IN2, OUTPUT);
  pinMode(MOTOR2_IN1, OUTPUT);
  pinMode(MOTOR2_IN2, OUTPUT);
  pinMode(MOTOR1_ENA, OUTPUT);
  pinMode(MOTOR2_ENB, OUTPUT);

  // Inicialmente, todos os motores estão parados
  parar();
}

void loop() {
  // Movimentos de teste
  frente();       // Move para frente
  delay(2000);    // Espera 2 segundos

  tras();         // Move para trás
  delay(2000);    // Espera 2 segundos

  direita();      // Vira à direita
  delay(1000);    // Espera 1 segundo

  esquerda();     // Vira à esquerda
  delay(1000);    // Espera 1 segundo

  parar();        // Para o robô
  delay(2000);    // Espera 2 segundos
}

// Função para mover o robô para frente
void frente() {
  digitalWrite(MOTOR1_IN1, HIGH);
  digitalWrite(MOTOR1_IN2, LOW);
  digitalWrite(MOTOR2_IN1, HIGH);
  digitalWrite(MOTOR2_IN2, LOW);
  analogWrite(MOTOR1_ENA, VELOCIDADE_MAX);  // Velocidade máxima
  analogWrite(MOTOR2_ENB, VELOCIDADE_MAX);  // Velocidade máxima
}

// Função para mover o robô para trás
void tras() {
  digitalWrite(MOTOR1_IN1, LOW);
  digitalWrite(MOTOR1_IN2, HIGH);
  digitalWrite(MOTOR2_IN1, LOW);
  digitalWrite(MOTOR2_IN2, HIGH);
  analogWrite(MOTOR1_ENA, VELOCIDADE_MAX);
  analogWrite(MOTOR2_ENB, VELOCIDADE_MAX);
}

// Função para virar o robô à direita
void direita() {
  digitalWrite(MOTOR1_IN1, HIGH);
  digitalWrite(MOTOR1_IN2, LOW);
  digitalWrite(MOTOR2_IN1, LOW);
  digitalWrite(MOTOR2_IN2, HIGH);
  analogWrite(MOTOR1_ENA, VELOCIDADE_MAX);
  analogWrite(MOTOR2_ENB, VELOCIDADE_MAX);
}

// Função para virar o robô à esquerda
void esquerda() {
  digitalWrite(MOTOR1_IN1, LOW);
  digitalWrite(MOTOR1_IN2, HIGH);
  digitalWrite(MOTOR2_IN1, HIGH);
  digitalWrite(MOTOR2_IN2, LOW);
  analogWrite(MOTOR1_ENA, VELOCIDADE_MAX);
  analogWrite(MOTOR2_ENB, VELOCIDADE_MAX);
}

// Função para parar o robô
void parar() {
  digitalWrite(MOTOR1_IN1, LOW);
  digitalWrite(MOTOR1_IN2, LOW);
  digitalWrite(MOTOR2_IN1, LOW);
  digitalWrite(MOTOR2_IN2, LOW);
  analogWrite(MOTOR1_ENA, 0);  // Velocidade zero
  analogWrite(MOTOR2_ENB, 0);  // Velocidade zero
}

// Função para ajustar a velocidade do robô
void ajustarVelocidade(int velocidade) {
  // Garante que a velocidade esteja dentro do intervalo válido
  velocidade = constrain(velocidade, VELOCIDADE_MIN, VELOCIDADE_MAX);

  analogWrite(MOTOR1_ENA, velocidade);
  analogWrite(MOTOR2_ENB, velocidade);
}
